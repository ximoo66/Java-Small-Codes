void setup() {
  
  size(400, 400);
  
  background(20, 20, 30);

  // Draw celestial objects
  drawMoon(50, 50, 40, color(255, 255, 255, 200));
  drawStar(100, 80, 5, 10, color(255, 255, 255));
  drawStar(300, 120, 5, 8, color(255, 255, 255));

  // Draw Halloween pumpkins
  drawHalloweenPumpkin(100, 250, 60, color(255, 165, 0));
  drawHalloweenPumpkin(250, 300, 80, color(255, 165, 0));
  drawHalloweenPumpkin(350, 200, 40, color(255, 165, 0));

  // Draw spiders
  drawSpider(150, 100, 30, color(50));
  drawSpider(300, 150, 20, color(50));

  // Draw a spooky tree
  drawSpookyTree(50, 300, 60, 120, color(139, 69, 19));
}

// Function to draw a Halloween pumpkin
void drawHalloweenPumpkin(int x, int y, int size, color c) {
  // Set the fill color to the provided color
  fill(c);

  // Draw the main pumpkin body
  ellipse(x, y, size, size * 0.8);
  
  // Draw the eyes of the pumpkin
  fill(0);
  ellipse(x - size * 0.25, y - size * 0.1, size * 0.2, size * 0.3);
  ellipse(x + size * 0.25, y - size * 0.1, size * 0.2, size * 0.3);

  // Draw the mouth of the pumpkin
  beginShape();
  vertex(x - size * 0.35, y + size * 0.1);
  vertex(x - size * 0.15, y + size * 0.25);
  vertex(x + size * 0.15, y + size * 0.25);
  vertex(x + size * 0.35, y + size * 0.1);
  endShape(CLOSE);

  // Draw details on the pumpkin
  fill(c);
  float detailSize = size * 0.1;
  ellipse(x - size * 0.25, y - size * 0.1, detailSize, detailSize);
  ellipse(x + size * 0.25, y - size * 0.1, detailSize, detailSize);
  ellipse(x, y + size * 0.2, detailSize, detailSize);
}

// Function to draw a spider
void drawSpider(int x, int y, int size, color c) {
  // Set the fill color to the provided color
  fill(c);
  // Draw the spider body
  ellipse(x, y, size, size);

  // Draw spider legs
  for (int i = 0; i < 8; i++) {
    float angle = TWO_PI / 8 * i;
    float legX = x + cos(angle) * size * 0.5;
    float legY = y + sin(angle) * size * 0.5;
    line(x, y, legX, legY);
  }
}

// Function to draw a moon
void drawMoon(int x, int y, int size, color c) {
  // Set the fill color to the provided color
  fill(c);
  // Draw a crescent moon
  arc(x, y, size, size, PI, TWO_PI);
}

// Function to draw a star
void drawStar(int x, int y, int numPoints, int outerRadius, color c) {
  // Set the fill color to the provided color
  fill(c);
  
  // Draw a star with the given parameters
  float angle = TWO_PI / numPoints;
  float halfAngle = angle / 2.0;
  beginShape();
  for (float a = 0; a < TWO_PI; a += angle) {
    float sx = x + cos(a) * outerRadius;
    float sy = y + sin(a) * outerRadius;
    vertex(sx, sy);
    sx = x + cos(a + halfAngle) * outerRadius / 2;
    sy = y + sin(a + halfAngle) * outerRadius / 2;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

// Function to draw a spooky tree
void drawSpookyTree(int x, int y, int trunkWidth, int trunkHeight, color c) {
  // Set the fill color to the provided color
  fill(c);

  // Draw the trunk of the tree
  rect(x - trunkWidth / 2, y - trunkHeight, trunkWidth, trunkHeight);

  // Draw the foliage of the tree
  fill(34, 139, 34);
  ellipse(x, y - trunkHeight, trunkWidth * 1.5, trunkHeight * 1.5);
}
