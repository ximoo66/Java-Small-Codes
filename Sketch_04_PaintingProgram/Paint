int brushSize = 5;
int currentColor = 0xFF000000; //  black
int currentTool = 0; // 0: Brush, 1: Line, 2: Circle
int startX, startY;
color[] palette; 

// UI 
Button brushButton, lineButton, circleButton, clearButton;
Slider brushSizeSlider;

void setup() {
  size(800, 600);
  background(255);

  
  noStroke();
  palette = new color[15];
  palette[0] = color(255, 0, 0);   // Red
  palette[1] = color(0, 255, 0);   // Green
  palette[2] = color(0, 0, 255);   // Blue
  palette[3] = color(255, 255, 0); // Yellow
  palette[4] = color(255, 0, 255); // Magenta
  palette[5] = color(0, 255, 255); // Cyan
  palette[6] = color(255, 128, 0); // Orange
  palette[7] = color(128, 0, 255); // Purple
  palette[8] = color(0, 128, 255); // Light Blue
  palette[9] = color(255, 255, 255); // White
  palette[10] = color(128, 128, 128); // Gray
  palette[11] = color(0, 0, 0); // Black
  palette[12] = color(128, 0, 0); // Maroon
  palette[13] = color(0, 128, 0); // Green (Dark)
  palette[14] = color(0, 0, 128); // Navy

  
  brushButton = new Button(10, 10, 80, 30, "Brush");
  lineButton = new Button(100, 10, 80, 30, "Line");
  circleButton = new Button(190, 10, 80, 30, "Circle");
  clearButton = new Button(280, 10, 80, 30, "Clear");
  brushSizeSlider = new Slider(380, 10, 150, 10, 1, 50, brushSize);
}

void draw() {
  
  noStroke();
  drawPalette();

  
  noStroke();
  brushButton.display();
  lineButton.display();
  circleButton.display();
  clearButton.display();

 
  noStroke();
  brushSizeSlider.display();


}

void drawPalette() {
  
  noStroke();

  for (int i = 0; i < palette.length; i++) {
    fill(palette[i]);
    rect(width - 40, i * 40, 40, 40);
  }

  
  noStroke();
}

void mousePressed() {
  startX = mouseX;
  startY = mouseY;

  // Check if the user clicked on the color palette
  if (mouseX > width - 40 && mouseX < width && mouseY < palette.length * 40) {
    int selectedColorIndex = mouseY / 40;
    currentColor = palette[selectedColorIndex];
  }

  // Check UI button clicks
  brushButton.checkClick();
  lineButton.checkClick();
  circleButton.checkClick();
  clearButton.checkClick();
}

void mouseDragged() {
  switch (currentTool) {
    case 0: // Brush
      drawBrush();
      break;
    case 1: // Line
      drawLine();
      break;
    case 2: // Circle
      drawCircle();
      break;
  }
}

void drawBrush() {
  stroke(currentColor);
  strokeWeight(brushSizeSlider.getValue());
  line(pmouseX, pmouseY, mouseX, mouseY);
}

void drawLine() {
  
  stroke(currentColor);
  strokeWeight(brushSizeSlider.getValue());
  line(startX, startY, mouseX, mouseY);
}

void drawCircle() {
 
  stroke(currentColor);
  strokeWeight(brushSizeSlider.getValue());
  float diameter = dist(startX, startY, mouseX, mouseY);
  ellipse(startX, startY, diameter, diameter);
}

void keyPressed() {
  if (key == 'c' || key == 'C') {
    background(255); // Clear canvas
  } else if (key == '1') {
    currentTool = 0; // Brush
  } else if (key == '2') {
    currentTool = 1; // Line
  } else if (key == '3') {
    currentTool = 2; // Circle
  } else if (key == ']') {
    brushSize = min(brushSize + 1, 50); // Increase brush size, capped at 50
    brushSizeSlider.setValue(brushSize); 
  } else if (key == '[') {
    brushSize = max(brushSize - 1, 1); // Decrease brush size, minimum size is 1
    brushSizeSlider.setValue(brushSize); 
  }
}




class Button {
  float x, y, w, h;
  String label;

  Button(float x, float y, float w, float h, String label) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.label = label;
  }

  void display() {
    fill(200);
    rect(x, y, w, h);
    fill(0);
    textSize(14);
    textAlign(CENTER, CENTER);
    text(label, x + w / 2, y + h / 2);
  }

  void checkClick() {
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h) {
      handleButtonClick();
    }
  }

  void handleButtonClick() {
    if (label.equals("Brush")) {
      currentTool = 0;
    } else if (label.equals("Line")) {
      currentTool = 1;
    } else if (label.equals("Circle")) {
      currentTool = 2;
    } else if (label.equals("Clear")) {
      background(255);
    }
  }
}


class Slider {
  float x, y, w, h;
  float minValue, maxValue;
  float value;

  Slider(float x, float y, float w, float h, float minValue, float maxValue, float startValue) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.minValue = minValue;
    this.maxValue = maxValue;
    this.value = startValue;
  }

  void display() {
    fill(200);
    rect(x, y, w, h);
    float sliderX = map(value, minValue, maxValue, x, x + w);
    fill(0);
    rect(sliderX - 5, y - 5, 10, h + 10);
    fill(0);
    textSize(14);
    textAlign(CENTER, CENTER);
    text("Brush Size: ", x + w + 45, y + h / 2);
  }

  float getValue() {
    return value;
  }

  void setValue(float newValue) {
    value = constrain(newValue, minValue, maxValue);
  }
}
